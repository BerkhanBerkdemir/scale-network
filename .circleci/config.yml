---

version: 2
jobs:

  gomplate_tests:
    docker:
    - image: hairyhenderson/gomplate:v3.2.0-alpine
    resource_class: medium
    working_directory: ~/scale-network/tests/unit/openwrt
    steps:
    - checkout:
        path: ~/scale-network

    - run:
        name: install diffutils
        command: apk update && apk add diffutils

    # Netgear WNDR 3700v2, 3800, 3800ch configs
    - run:
        name: openwrt ar71xx golden file test
        command: sh -x test.sh -t ar71xx

    # TP-Link c2600 configs
    - run:
        name: openwrt ipq806x golden file test
        command: sh -x test.sh -t ipq806x

  # This build takes a long time and should be done
  # outside of initial PR CI testing
  openwrt_build_ar71xx:
    docker:
      - image: sarcasticadmin/openwrt-build@sha256:bab6de3f66f5365d866de646bb9fd1f2000061d1a5fe8a07b6a714661a9a9a63
    resource_class: medium
    working_directory: ~/scale-network/openwrt
    steps:
      - checkout:
          path: ~/scale-network

      - run:
          name: build openwrt image
          command: TARGET=ar71xx make templates build-img

      - run:
          name: copy ar71xx artifacts
          command: |
              mkdir -p /tmp/ar71xx
              # TODO: unify build refs with new ath79 type
              cp /home/openwrt/scale-network/openwrt/build/source-ar71xx-*/bin/targets/ath79/generic/*factory.img /tmp/ar71xx
              cp /home/openwrt/scale-network/openwrt/build/source-ar71xx-*/bin/targets/ath79/generic/sha256sums /tmp/ar71xx

      - store_artifacts:
          path: /tmp/ar71xx

  openwrt_build_ipq806x:
    docker:
      - image: sarcasticadmin/openwrt-build@sha256:bab6de3f66f5365d866de646bb9fd1f2000061d1a5fe8a07b6a714661a9a9a63
    resource_class: medium
    working_directory: ~/scale-network/openwrt
    steps:
      - checkout:
          path: ~/scale-network

      - run:
          name: build openwrt image
          command: TARGET=ipq806x make templates build-img

      - run:
          name: copy ipq806x artifacts
          command: |
              mkdir -p /tmp/ipq806x
              cp /home/openwrt/scale-network/openwrt/build/source-ipq806x-*/bin/targets/ipq806x/generic/*factory.bin /tmp/ipq806x
              cp /home/openwrt/scale-network/openwrt/build/source-ipq806x-*/bin/targets/ipq806x/generic/sha256sums /tmp/ipq806x

      - store_artifacts:
          path: /tmp/ipq806x

  validate_datafiles:
    docker:
    - image: kylerisse/ansible-tester@sha256:f6a9507ec1d7a2dd0570cd88cb19746840c4f97e7618f53158616b9e1f5a3618
    resource_class: small
    working_directory: ~/scale-network/facts
    steps:
    - checkout:
        path: ~/scale-network

    - run:
        name: lint python files
        command: pylint *.py

    - run:
        name: data file unit tests
        command: pytest -vv

  ansible_tests:
    docker:
    - image: kylerisse/ansible-tester@sha256:f6a9507ec1d7a2dd0570cd88cb19746840c4f97e7618f53158616b9e1f5a3618
    resource_class: small
    working_directory: ~/scale-network/ansible
    steps:
    - checkout:
        path: ~/scale-network

    - run:
        name: lint ansible playbook
        command: ansible-lint -x 403 -x 503 scale.yml

    - run:
        name: lint python files
        command: pylint *.py

    - run:
        name: python unit tests
        command: pytest -vv

    - run:
        name: validate properly formed json
        command: ./inventory.py | jq

  perl_lint:
    docker:
    - image: perl:5
    resource_class: medium
    working_directory: ~/scale-network
    steps:
    - checkout:
        path: ~/scale-network

    - run:
        name: compile switch-configuration
        # Make all warnings into errors so perl has a return thats not 0
        command: find ./switch-configuration/ -iname "*.pl" | xargs -i perl -Mstrict -Mdiagnostics -M'warnings FATAL=>q(all)' -cw {}

    - run:
        name: Set temp password
        # Make sure we set a password
        command: echo "scale" > ./facts/secrets/jroot_pw

    - run:
        name: run switch-configuration
        working_directory: ~/scale-network/switch-configuration/config
        # Make sure we set a password
        command: ./scripts/build_switch_configs.pl

workflows:
  version: 2
  test_all:
    jobs:
      - gomplate_tests
      - validate_datafiles
      - ansible_tests:
          requires:
            - validate_datafiles
      - perl_lint
  weekly:
    triggers:
      - schedule:
          cron: "15 3 * * 0"
          filters:
            branches:
              only:
                - master
    jobs:
      - openwrt_build_ar71xx
      - openwrt_build_ipq806x
