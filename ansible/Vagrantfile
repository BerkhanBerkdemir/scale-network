# -*- mode: ruby -*-
# vi: set ft=ruby :

playbook = 'scale.yml'
boxname = 'ubuntu/bionic64'
memmb = '1024'
numcpu = '2'

boxes = [
  {
    name: 'core1',
    eth1: '10.128.3.5',
    eth1ipv6: '2001:470:f325:503::5',
    description: 'DNS & DHCP & SYSLOG & NTP in NOC',
  },
  {
    name: 'core2',
    eth1: '10.0.3.5',
    eth1ipv6: '2001:470:f325:103::5',
    description: 'DNS & DHCP & SYSLOG & NTP in Expo Hall MDF',
  },
  {
    name: 'monitoring1',
    eth1: '10.128.3.6',
    eth1ipv6: '2001:470:f325:503::6',
    description: 'MONITORING Server in NOC',
  },
  {
    name: 'automation1',
    eth1: '10.128.3.7',
    eth1ipv6: '2001:470:f325:503::7',
    description: 'AUTOMATION & SIGN Server in NOC',
  },
]

Vagrant.configure(2) do |configure|
  boxes.each_with_index do |box, index|
    configure.vm.define box[:name] do |config|
      config.vm.box = boxname

      config.ssh.insert_key = false
      config.vm.hostname = box[:name]

      config.vm.provider 'virtualbox' do |v|
        v.default_nic_type = 'virtio'
        v.gui = false
        v.customize ['modifyvm', :id, '--memory', memmb]
        v.customize ['modifyvm', :id, '--cpus', numcpu]
        v.customize ['modifyvm', :id, '--uartmode1', 'disconnected']
      end

      config.vm.network :private_network, ip: box[:eth1]

      if index == boxes.size - 1
        config.vm.provision 'ansible' do |ansible|
          ansible.compatibility_mode = '2.0'
          ansible.verbose = ''
          ansible.playbook = playbook
          ansible.limit = 'core,monitoring,automation'
          ansible.inventory_path = 'inventory.py'
          ansible.host_key_checking = false
          ansible.raw_ssh_args = ['-i ~/.vagrant.d/insecure_private_key']
          ansible.raw_arguments = ['--forks=5']
        end
      end

      config.vm.provision 'shell', inline: <<-SHELL
        sed -i '/addresses:/i\\ \ \ \ \ \ dhcp4: false' /etc/netplan/50-vagrant.yaml
        netplan apply
      SHELL

    end
  end
end

